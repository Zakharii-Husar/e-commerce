openapi: 3.0.0
info:
  title: Cart Service
  version: 0.0.0
tags: []
paths:
  /api/cart/:
    get:
      operationId: getCartItems
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductOverviewResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/cart/items/{product_id}:
    post:
      operationId: addItemToCart
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      operationId: updateItemQuantity
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCartItemRequest'
    delete:
      operationId: deleteItemFromCart
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
components:
  schemas:
    ErrorResponse:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    InternalServerError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: number
          enum:
            - 500
        message:
          type: string
          enum:
            - Something went wrong. Try again later
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
    InvalidRequestError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: number
          enum:
            - 400
        message:
          type: string
          enum:
            - Invalid Request
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
    NotFoundError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: number
          enum:
            - 404
        message:
          type: string
          enum:
            - Not Found
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
    OrderedItemModel:
      type: object
      required:
        - orderedQuantity
      properties:
        orderedQuantity:
          type: integer
          format: int16
      allOf:
        - $ref: '#/components/schemas/ProductOverviewResponse'
    ProductDetailsResponse:
      type: object
      required:
        - stockQuantity
      properties:
        stockQuantity:
          type: integer
          format: int32
        productDescription:
          type: string
        productMaterial:
          type: string
        productWeight:
          type: number
        productWidth:
          type: number
        productLenght:
          type: number
        productHeight:
          type: number
      allOf:
        - $ref: '#/components/schemas/ProductOverviewResponse'
    ProductOverviewResponse:
      type: object
      required:
        - productId
        - productName
        - productPrice
        - productCategory
        - productAttachements
        - sellerUsername
        - rating
      properties:
        productId:
          type: integer
          format: int64
        productName:
          type: string
        productPrice:
          type: number
        productCategory:
          type: string
        productAttachements:
          type: array
          items:
            type: string
        sellerUsername:
          type: string
        rating:
          $ref: '#/components/schemas/ProductRatingResponse'
    ProductRatingResponse:
      type: object
      required:
        - ratedTimes
        - averageRating
      properties:
        ratedTimes:
          type: integer
          format: int32
        averageRating:
          type: number
    UnauthorizedError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: number
          enum:
            - 401
        message:
          type: string
          enum:
            - Unauthorized
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
    UpdateCartItemRequest:
      type: object
      properties:
        quantity:
          type: integer
          format: int32
