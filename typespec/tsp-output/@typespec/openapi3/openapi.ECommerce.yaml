openapi: 3.0.0
info:
  title: Cart Service
  version: 0.0.0
tags: []
paths:
  /api/admin/suspend/product/{product_id}:
    patch:
      operationId: suspendProduct
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/admin/suspend/user/{user_id}:
    patch:
      operationId: suspendUser
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/admin/transactions:
    get:
      operationId: getAllTransactions
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/auth/recover_password:
    post:
      operationId: recoverPassword
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                passRecoverRequest:
                  $ref: '#/components/schemas/PassRecoverRequest'
              required:
                - passRecoverRequest
  /api/auth/sign_in:
    post:
      operationId: signIn
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signInReq:
                  $ref: '#/components/schemas/SignInRequest'
              required:
                - signInReq
  /api/auth/sign_out:
    get:
      operationId: signOut
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/auth/sign_up:
    post:
      operationId: signUp
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signUpReq:
                  $ref: '#/components/schemas/SignUpRequest'
              required:
                - signUpReq
  /api/cart/:
    get:
      operationId: getCartItems
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductOverviewResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/cart/items/{product_id}:
    post:
      operationId: addItemToCart
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      operationId: updateItemQuantity
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCartItemRequest'
    delete:
      operationId: deleteItemFromCart
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/orders/:
    get:
      operationId: getOrders
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderOverviewResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/orders/items/{order_id}:
    get:
      operationId: getOrderById
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/orders/items/{order_id}/cancel:
    patch:
      operationId: cancelOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelOrderResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/orders/items/{order_id}/update:
    patch:
      operationId: updateOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrderResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderRequest'
  /api/products/:
    get:
      operationId: getProducts
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductOverviewResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      operationId: createProduct
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailsResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
  /api/products/{product_id}:
    get:
      operationId: getProductById
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailsResponse'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      operationId: updateProductById
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
    delete:
      operationId: deleteProductById
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/products/{product_id}/attachement:
    post:
      operationId: uploadProductAttachment
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadProductImgResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          image/jpeg:
            schema:
              type: object
              properties:
                uploadProductImgReq:
                  $ref: '#/components/schemas/UploadProductImgRequest'
              required:
                - uploadProductImgReq
          image/jpg:
            schema:
              type: object
              properties:
                uploadProductImgReq:
                  $ref: '#/components/schemas/UploadProductImgRequest'
              required:
                - uploadProductImgReq
          image/png:
            schema:
              type: object
              properties:
                uploadProductImgReq:
                  $ref: '#/components/schemas/UploadProductImgRequest'
              required:
                - uploadProductImgReq
  /api/products/{product_id}/attachement/{attachement_id}:
    get:
      operationId: getProductAttachmentById
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
        - name: attachement_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/GetProductImgResponse'
            image/jpg:
              schema:
                $ref: '#/components/schemas/GetProductImgResponse'
            image/png:
              schema:
                $ref: '#/components/schemas/GetProductImgResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/products/{product_id}/questions:
    get:
      operationId: getProductQuestions
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuestionResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      operationId: postProductQuestion
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
  /api/products/{product_id}/questions/{question_id}/respond:
    post:
      operationId: postQuestionAnswer
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
        - name: question_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerToQuestionResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postAnswerReq:
                  $ref: '#/components/schemas/AnswerToQuestionRequest'
              required:
                - postAnswerReq
  /api/products/{product_id}/reviews:
    get:
      operationId: getProductReviews
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      operationId: postProductReview
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
  /api/products/{product_id}/reviews/{review_id}/respond:
    post:
      operationId: respondToReview
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
        - name: review_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerToReviewResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerToReviewRequest'
  /api/products/{product_id}attachement/{attachement_id}:
    delete:
      operationId: deleteProductAttachmentById
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
        - name: attachement_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/sellers/inventory:
    get:
      operationId: getInventory
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDetailsResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/sellers/orders:
    get:
      operationId: getOrders
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetailsResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/sellers/orders/{order_id}/update:
    put:
      operationId: updateOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrder'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrder'
  /api/users/:
    get:
      operationId: getUsers
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDetailsResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/users/search:
    get:
      operationId: searchUsers
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDetailsResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/users/{user_id}:
    get:
      operationId: getUserById
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      operationId: updateUserDetails
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
    delete:
      operationId: deleteUser
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/wishlist/:
    get:
      operationId: getWishlistItems
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductOverviewResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/wishlist/items/{product_id}:
    post:
      operationId: addItemToWishlist
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      operationId: deleteItemFromWishlist
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
components:
  schemas:
    AnswerToQuestionRequest:
      type: object
      required:
        - username
        - answer
      properties:
        username:
          type: string
        answer:
          type: string
    AnswerToQuestionResponse:
      type: object
      required:
        - answerId
        - dateTime
      properties:
        answerId:
          type: integer
          format: int64
        dateTime:
          $ref: '#/components/schemas/DateTimeKnownEncoding'
      allOf:
        - $ref: '#/components/schemas/AnswerToQuestionRequest'
    AnswerToReviewRequest:
      type: object
      required:
        - username
        - answer
      properties:
        username:
          type: string
        answer:
          type: string
    AnswerToReviewResponse:
      type: object
      required:
        - answerId
        - dateTime
      properties:
        answerId:
          type: integer
          format: int64
        dateTime:
          $ref: '#/components/schemas/DateTimeKnownEncoding'
      allOf:
        - $ref: '#/components/schemas/AnswerToReviewRequest'
    AuthResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    CancelOrderResponse:
      type: object
      required:
        - success
      properties:
        success:
          type: boolean
    CreateProductRequest:
      type: object
      required:
        - productName
        - productPrice
        - productCategory
        - productQuantity
      properties:
        productName:
          type: string
        productPrice:
          type: number
        productCategory:
          type: string
        productQuantity:
          type: integer
        productDescription:
          type: string
        productMaterial:
          type: string
        productWeight:
          type: number
        productWidth:
          type: number
        productLenght:
          type: number
        productHeight:
          type: number
    DateTimeKnownEncoding:
      type: string
      enum:
        - rfc3339
        - rfc7231
        - unixTimestamp
      description: Known encoding to use on utcDateTime or offsetDateTime
    ErrorResponse:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    GetProductImgResponse:
      type: object
      required:
        - image
      properties:
        image:
          type: string
          format: byte
    InternalServerError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: number
          enum:
            - 500
        message:
          type: string
          enum:
            - Something went wrong. Try again later
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
    InvalidRequestError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: number
          enum:
            - 400
        message:
          type: string
          enum:
            - Invalid Request
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
    NotFoundError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: number
          enum:
            - 404
        message:
          type: string
          enum:
            - Not Found
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
    OrderDetailsResponse:
      type: object
      required:
        - orderDestination
        - shippingRate
        - transactionId
        - itemes
      properties:
        orderDestination:
          type: string
        shippingRate:
          type: number
        transactionId:
          type: string
        itemes:
          type: array
          items:
            $ref: '#/components/schemas/OrderedItemModel'
      allOf:
        - $ref: '#/components/schemas/OrderOverviewResponse'
    OrderOverviewResponse:
      type: object
      required:
        - orderId
        - orderStatus
        - orderPrice
        - createdAt
      properties:
        orderId:
          type: integer
          format: int64
        orderStatus:
          type: string
        orderPrice:
          type: number
        createdAt:
          $ref: '#/components/schemas/DateTimeKnownEncoding'
    OrderedItemModel:
      type: object
      required:
        - orderedQuantity
      properties:
        orderedQuantity:
          type: integer
          format: int16
      allOf:
        - $ref: '#/components/schemas/ProductOverviewResponse'
    PassRecoverRequest:
      type: object
      required:
        - userNameOrEmail
      properties:
        userNameOrEmail:
          type: string
    ProductDetailsResponse:
      type: object
      required:
        - stockQuantity
      properties:
        stockQuantity:
          type: integer
          format: int32
        productDescription:
          type: string
        productMaterial:
          type: string
        productWeight:
          type: number
        productWidth:
          type: number
        productLenght:
          type: number
        productHeight:
          type: number
      allOf:
        - $ref: '#/components/schemas/ProductOverviewResponse'
    ProductOverviewResponse:
      type: object
      required:
        - productId
        - productName
        - productPrice
        - productCategory
        - productAttachements
        - sellerUsername
        - rating
      properties:
        productId:
          type: integer
          format: int64
        productName:
          type: string
        productPrice:
          type: number
        productCategory:
          type: string
        productAttachements:
          type: array
          items:
            type: string
        sellerUsername:
          type: string
        rating:
          $ref: '#/components/schemas/ProductRatingResponse'
    ProductRatingResponse:
      type: object
      required:
        - ratedTimes
        - averageRating
      properties:
        ratedTimes:
          type: integer
          format: int32
        averageRating:
          type: number
    QuestionRequest:
      type: object
      required:
        - question
      properties:
        question:
          type: string
    QuestionResponse:
      type: object
      required:
        - questionId
        - username
        - question
        - dateTime
      properties:
        questionId:
          type: integer
          format: int64
        username:
          type: string
        question:
          type: string
        dateTime:
          $ref: '#/components/schemas/DateTimeKnownEncoding'
    ReviewRequest:
      type: object
      required:
        - rate
      properties:
        rate:
          type: number
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
        comment:
          type: string
    ReviewResponse:
      type: object
      required:
        - reviewId
        - username
        - dateTime
      properties:
        reviewId:
          type: integer
          format: int16
        username:
          type: string
        dateTime:
          $ref: '#/components/schemas/DateTimeKnownEncoding'
      allOf:
        - $ref: '#/components/schemas/ReviewRequest'
    SignInRequest:
      type: object
      required:
        - userNameOrEmail
        - password
      properties:
        userNameOrEmail:
          type: string
        password:
          type: string
    SignUpRequest:
      type: object
      required:
        - userName
        - fullName
        - email
        - phoneNumber
        - password
        - country
        - city
        - province
        - street
        - zipCode
      properties:
        userName:
          type: string
        fullName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        password:
          type: string
        country:
          type: string
        city:
          type: string
        province:
          type: string
        street:
          type: string
        unitNumber:
          type: string
        zipCode:
          type: string
    TransactionResponse:
      type: object
      required:
        - transactionId
        - transactionType
        - paymentMethod
        - orderId
        - payerId
        - payeeId
        - payerUsername
        - payeeUsername
        - amount
        - transactionStatus
        - transactionTime
      properties:
        transactionId:
          type: integer
          format: int64
        transactionType:
          type: string
        paymentMethod:
          type: string
        orderId:
          type: integer
          format: int64
        payerId:
          type: integer
          format: int64
        payeeId:
          type: integer
          format: int64
        payerUsername:
          type: string
        payeeUsername:
          type: string
        amount:
          type: number
        transactionStatus:
          type: string
        transactionTime:
          $ref: '#/components/schemas/DateTimeKnownEncoding'
    UnauthorizedError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: number
          enum:
            - 401
        message:
          type: string
          enum:
            - Unauthorized
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
    UpdateCartItemRequest:
      type: object
      properties:
        quantity:
          type: integer
          format: int32
    UpdateOrder:
      type: object
      required:
        - currentLocation
        - orderStatus
      properties:
        currentLocation:
          type: string
        orderStatus:
          type: string
    UpdateOrderRequest:
      type: object
      properties:
        newStatus:
          type: string
    UpdateOrderResponse:
      type: object
      required:
        - success
      properties:
        success:
          type: boolean
    UpdateProductRequest:
      type: object
      properties:
        productName:
          type: string
        productDescription:
          type: string
        productPrice:
          type: number
        productCategory:
          type: string
        productQuantity:
          type: integer
        stockQuantity:
          type: integer
          format: int32
    UpdateUserRequest:
      type: object
      properties:
        userName:
          type: string
        fullName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        country:
          type: string
        city:
          type: string
        province:
          type: string
        street:
          type: string
        unitNumber:
          type: string
        zipCode:
          type: string
    UploadProductImgRequest:
      type: object
      required:
        - image
      properties:
        image:
          type: string
          format: byte
    UploadProductImgResponse:
      type: object
      required:
        - success
        - attachementId
      properties:
        success:
          type: boolean
        attachementId:
          type: string
    UserDetailsResponse:
      type: object
      required:
        - userId
        - userName
        - fullName
        - email
        - phoneNumber
        - country
        - city
        - province
        - street
        - zipCode
      properties:
        userId:
          type: string
        userName:
          type: string
        fullName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        country:
          type: string
        city:
          type: string
        province:
          type: string
        street:
          type: string
        unitNumber:
          type: string
        zipCode:
          type: string
servers:
  - url: https://ecommerce.com
    description: Single server endpoint for the eCommerce service
    variables: {}
